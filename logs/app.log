2025-04-21 13:45:47 - root - INFO - API Server is starting up with configured logging (file only)
2025-04-21 13:45:47 - database.connect - INFO - Creating connection to users_info on postgres:5432
2025-04-21 13:45:47 - database.connect - INFO - Executing base migration
2025-04-21 13:45:47 - database.connect - INFO - Executing query: CREATE TABLE IF NOT EXISTS Chats (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NULL,
    temperature FLOAT NOT NULL,
    top_p FLOAT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS Users (
    id SERIAL PRIMARY KEY,
    login VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(100) UNIQUE,
    name VARCHAR(100) NULL,
    surname VARCHAR(100) NULL,
    patronymic VARCHAR(100) NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS UserChats (
    user_id INTEGER NOT NULL,
    chat_id INTEGER NOT NULL,
    is_admin BOOLEAN DEFAULT FALSE,
    joined_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (user_id, chat_id),
    FOREIGN KEY (user_id) REFERENCES Users(id) ON DELETE CASCADE,
    FOREIGN KEY (chat_id) REFERENCES Chats(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Messages (
    id SERIAL PRIMARY KEY,
    text_content TEXT NULL,
    image_content TEXT NULL,
    author_id INTEGER NULL,
    chat_id INTEGER NOT NULL,
    is_bot_message BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (author_id) REFERENCES Users(id) ON DELETE SET NULL,
    FOREIGN KEY (chat_id) REFERENCES Chats(id) ON DELETE CASCADE,
    CONSTRAINT content_not_empty CHECK (text_content IS NOT NULL OR image_content IS NOT NULL)
);

2025-04-21 13:45:47 - database.connect - INFO - Base migration executed
2025-04-21 13:45:47 - dependences.lifespan - INFO - Session created
2025-04-21 13:58:43 - passlib.handlers.bcrypt - WARNING - (trapped) error reading bcrypt version
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/passlib/handlers/bcrypt.py", line 620, in _load_backend_mixin
    version = _bcrypt.__about__.__version__
              ^^^^^^^^^^^^^^^^^
AttributeError: module 'bcrypt' has no attribute '__about__'
2025-04-21 13:58:43 - database.connect - INFO - Executing query: INSERT INTO Users(login, password, email, name, surname, patronymic) VALUES ($1, $2, $3, $4, $5, $6)
2025-04-21 13:58:43 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:03:17 - database.connect - INFO - Executing query: INSERT INTO Users(login, password, email, name, surname, patronymic) VALUES ($1, $2, $3, $4, $5, $6)
2025-04-21 14:03:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:05:03 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:07:46 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:08:25 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:10:36 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:10:52 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:25:43 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:26:39 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:26:39 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:26:40 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:26:40 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:26:40 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:26:40 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:26:41 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:26:41 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:26:41 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:26:41 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:26:41 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:26:42 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:26:42 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:26:42 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:26:42 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:26:42 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:26:43 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:26:43 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:26:43 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:26:43 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:26:43 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:28:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:28:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:28:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:28:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:28:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:28:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:28:17 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:36:12 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:36:12 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:39:06 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:39:06 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:39:06 - database.connect - INFO - Fetching row query: 
        SELECT c.id, c.name, c.temperature, c.top_p FROM Chats c
        JOIN UserChats uc ON c.id = uc.chat_id WHERE uc.user_id = $1 AND c.name = $2
        
2025-04-21 14:39:06 - application.app - ERROR - Error occurred: AttributeError - 'NoneType' object has no attribute 'temperature'
Path: /api/ask_bot, Method: POST
Traceback: Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py", line 165, in __call__
    await self.app(scope, receive, _send)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 714, in __call__
    await self.middleware_stack(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 734, in app
    await route.handle(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 288, in handle
    await self.app(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 76, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 73, in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 291, in app
    solved_result = await solve_dependencies(
                    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/fastapi/dependencies/utils.py", line 638, in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/dependences/bot_request.py", line 18, in depends_ask_bot
    return await service_ask_bot(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "/app/services/bot_integration.py", line 104, in service_ask_bot
    chat_info: ChatInfo = await get_user_chat(
                          ^^^^^^^^^^^^^^^^^^^^
  File "/app/services/bot_integration.py", line 31, in get_user_chat
    telegram_parameters.chat_id, chat_parameters.temperature, chat_parameters.top_p
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'temperature'

2025-04-21 14:39:45 - database.connect - INFO - Executing query: INSERT INTO Users(login, password, email, name, surname, patronymic) VALUES ($1, $2, $3, $4, $5, $6)
2025-04-21 14:39:45 - application.app - ERROR - Error occurred: UniqueViolationError - duplicate key value violates unique constraint "users_login_key"
DETAIL:  Key (login)=(Andew) already exists.
Path: /auth/register, Method: POST
Traceback: NoneType: None

2025-04-21 14:39:52 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:40:01 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:40:01 - database.connect - INFO - Fetching row query: 
        SELECT c.id, c.name, c.temperature, c.top_p FROM Chats c
        JOIN UserChats uc ON c.id = uc.chat_id WHERE uc.user_id = $1 AND c.name = $2
        
2025-04-21 14:40:01 - application.app - ERROR - Error occurred: AttributeError - 'NoneType' object has no attribute 'temperature'
Path: /api/ask_bot, Method: POST
Traceback: Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py", line 165, in __call__
    await self.app(scope, receive, _send)
  File "/usr/local/lib/python3.11/site-packages/starlette/middleware/exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 714, in __call__
    await self.middleware_stack(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 734, in app
    await route.handle(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 288, in handle
    await self.app(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 76, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "/usr/local/lib/python3.11/site-packages/starlette/routing.py", line 73, in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/fastapi/routing.py", line 291, in app
    solved_result = await solve_dependencies(
                    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/fastapi/dependencies/utils.py", line 638, in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/dependences/bot_request.py", line 18, in depends_ask_bot
    return await service_ask_bot(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "/app/services/bot_integration.py", line 104, in service_ask_bot
    chat_info: ChatInfo = await get_user_chat(
                          ^^^^^^^^^^^^^^^^^^^^
  File "/app/services/bot_integration.py", line 31, in get_user_chat
    telegram_parameters.chat_id, chat_parameters.temperature, chat_parameters.top_p
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'temperature'

2025-04-21 14:40:21 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:40:21 - services.bot_integration - WARNING - Model qwen not in allowed models list: ['qwen2.5:0.5b', 'deepseek-r1:1.5b']
2025-04-21 14:40:30 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:40:30 - database.connect - INFO - Fetching row query: 
        SELECT c.id, c.name, c.temperature, c.top_p FROM Chats c
        JOIN UserChats uc ON c.id = uc.chat_id WHERE uc.user_id = $1 AND c.name = $2
        
2025-04-21 14:40:30 - database.connect - INFO - Fetching value query: INSERT INTO Chats(name, temperature, top_p) VALUES ($1, $2, $3) RETURNING id
2025-04-21 14:40:30 - database.connect - INFO - Executing query: INSERT INTO UserChats(user_id, chat_id, is_admin) VALUES ($1, $2, $3)
2025-04-21 14:40:30 - database.connect - INFO - Fetching row query: SELECT id, name, temperature, top_p FROM Chats WHERE id = $1
2025-04-21 14:40:30 - database.connect - INFO - Fetching query: 
        SELECT m.text_content, m.image_content, m.is_bot_message FROM Messages m
        LEFT JOIN Users u ON m.author_id = u.id WHERE m.chat_id = $1 ORDER BY m.created_at ASC
        
2025-04-21 14:40:30 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 14:40:30 - httpx - INFO - HTTP Request: POST http://ollama:11434/api/chat "HTTP/1.1 500 Internal Server Error"
2025-04-21 14:40:30 - services.bot_integration - ERROR - Insufficient memory to run model qwen2.5:0.5b: model requires more system memory (456.4 MiB) than is available (396.6 MiB) (status code: 500)
2025-04-21 14:40:30 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 14:40:30 - httpx - INFO - HTTP Request: GET http://ollama:11434/api/tags "HTTP/1.1 200 OK"
2025-04-21 14:40:30 - services.bot_integration - ERROR - Could not list available models: 'Model' object has no attribute 'name'
2025-04-21 14:41:43 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:41:43 - database.connect - INFO - Fetching row query: 
        SELECT c.id, c.name, c.temperature, c.top_p FROM Chats c
        JOIN UserChats uc ON c.id = uc.chat_id WHERE uc.user_id = $1 AND c.name = $2
        
2025-04-21 14:41:43 - database.connect - INFO - Fetching query: 
        SELECT m.text_content, m.image_content, m.is_bot_message FROM Messages m
        LEFT JOIN Users u ON m.author_id = u.id WHERE m.chat_id = $1 ORDER BY m.created_at ASC
        
2025-04-21 14:41:43 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 14:41:43 - httpx - INFO - HTTP Request: POST http://ollama:11434/api/chat "HTTP/1.1 500 Internal Server Error"
2025-04-21 14:41:43 - services.bot_integration - ERROR - Insufficient memory to run model qwen2.5:0.5b: model requires more system memory (878.0 MiB) than is available (463.8 MiB) (status code: 500)
2025-04-21 14:41:43 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 14:41:43 - httpx - INFO - HTTP Request: GET http://ollama:11434/api/tags "HTTP/1.1 200 OK"
2025-04-21 14:41:43 - services.bot_integration - ERROR - Could not list available models: 'Model' object has no attribute 'name'
2025-04-21 14:42:26 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:42:26 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:42:26 - database.connect - INFO - Fetching row query: 
        SELECT c.id, c.name, c.temperature, c.top_p FROM Chats c
        JOIN UserChats uc ON c.id = uc.chat_id WHERE uc.user_id = $1 AND c.name = $2
        
2025-04-21 14:42:26 - database.connect - INFO - Fetching value query: INSERT INTO Chats(name, temperature, top_p) VALUES ($1, $2, $3) RETURNING id
2025-04-21 14:42:26 - database.connect - INFO - Executing query: INSERT INTO UserChats(user_id, chat_id, is_admin) VALUES ($1, $2, $3)
2025-04-21 14:42:26 - database.connect - INFO - Fetching row query: SELECT id, name, temperature, top_p FROM Chats WHERE id = $1
2025-04-21 14:42:26 - database.connect - INFO - Fetching query: 
        SELECT m.text_content, m.image_content, m.is_bot_message FROM Messages m
        LEFT JOIN Users u ON m.author_id = u.id WHERE m.chat_id = $1 ORDER BY m.created_at ASC
        
2025-04-21 14:42:26 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 14:42:26 - httpx - INFO - HTTP Request: POST http://ollama:11434/api/chat "HTTP/1.1 500 Internal Server Error"
2025-04-21 14:42:26 - services.bot_integration - ERROR - Insufficient memory to run model qwen2.5:0.5b: model requires more system memory (882.4 MiB) than is available (557.9 MiB) (status code: 500)
2025-04-21 14:42:26 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 14:42:26 - httpx - INFO - HTTP Request: GET http://ollama:11434/api/tags "HTTP/1.1 200 OK"
2025-04-21 14:42:26 - services.bot_integration - ERROR - Could not list available models: 'Model' object has no attribute 'name'
2025-04-21 14:45:04 - database.connect - INFO - Closing connection
2025-04-21 14:47:25 - root - INFO - API Server is starting up with configured logging (file only)
2025-04-21 14:47:25 - database.connect - INFO - Creating connection to users_info on postgres:5432
2025-04-21 14:47:25 - database.connect - INFO - Executing base migration
2025-04-21 14:47:25 - database.connect - INFO - Executing query: CREATE TABLE IF NOT EXISTS Chats (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NULL,
    temperature FLOAT NOT NULL,
    top_p FLOAT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS Users (
    id SERIAL PRIMARY KEY,
    login VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(100) UNIQUE,
    name VARCHAR(100) NULL,
    surname VARCHAR(100) NULL,
    patronymic VARCHAR(100) NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS UserChats (
    user_id INTEGER NOT NULL,
    chat_id INTEGER NOT NULL,
    is_admin BOOLEAN DEFAULT FALSE,
    joined_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (user_id, chat_id),
    FOREIGN KEY (user_id) REFERENCES Users(id) ON DELETE CASCADE,
    FOREIGN KEY (chat_id) REFERENCES Chats(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Messages (
    id SERIAL PRIMARY KEY,
    text_content TEXT NULL,
    image_content TEXT NULL,
    author_id INTEGER NULL,
    chat_id INTEGER NOT NULL,
    is_bot_message BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (author_id) REFERENCES Users(id) ON DELETE SET NULL,
    FOREIGN KEY (chat_id) REFERENCES Chats(id) ON DELETE CASCADE,
    CONSTRAINT content_not_empty CHECK (text_content IS NOT NULL OR image_content IS NOT NULL)
);

2025-04-21 14:47:25 - database.connect - INFO - Base migration executed
2025-04-21 14:47:25 - dependences.lifespan - INFO - Session created
2025-04-21 14:48:01 - root - INFO - API Server is starting up with configured logging (file only)
2025-04-21 14:48:01 - database.connect - INFO - Creating connection to users_info on postgres:5432
2025-04-21 14:48:01 - database.connect - INFO - Executing base migration
2025-04-21 14:48:01 - database.connect - INFO - Executing query: CREATE TABLE IF NOT EXISTS Chats (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NULL,
    temperature FLOAT NOT NULL,
    top_p FLOAT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS Users (
    id SERIAL PRIMARY KEY,
    login VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(100) UNIQUE,
    name VARCHAR(100) NULL,
    surname VARCHAR(100) NULL,
    patronymic VARCHAR(100) NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS UserChats (
    user_id INTEGER NOT NULL,
    chat_id INTEGER NOT NULL,
    is_admin BOOLEAN DEFAULT FALSE,
    joined_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (user_id, chat_id),
    FOREIGN KEY (user_id) REFERENCES Users(id) ON DELETE CASCADE,
    FOREIGN KEY (chat_id) REFERENCES Chats(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Messages (
    id SERIAL PRIMARY KEY,
    text_content TEXT NULL,
    image_content TEXT NULL,
    author_id INTEGER NULL,
    chat_id INTEGER NOT NULL,
    is_bot_message BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (author_id) REFERENCES Users(id) ON DELETE SET NULL,
    FOREIGN KEY (chat_id) REFERENCES Chats(id) ON DELETE CASCADE,
    CONSTRAINT content_not_empty CHECK (text_content IS NOT NULL OR image_content IS NOT NULL)
);

2025-04-21 14:48:01 - database.connect - INFO - Base migration executed
2025-04-21 14:48:01 - dependences.lifespan - INFO - Session created
2025-04-21 14:48:43 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:48:43 - passlib.handlers.bcrypt - WARNING - (trapped) error reading bcrypt version
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/passlib/handlers/bcrypt.py", line 620, in _load_backend_mixin
    version = _bcrypt.__about__.__version__
              ^^^^^^^^^^^^^^^^^
AttributeError: module 'bcrypt' has no attribute '__about__'
2025-04-21 14:48:44 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 14:48:44 - database.connect - INFO - Fetching row query: 
        SELECT c.id, c.name, c.temperature, c.top_p FROM Chats c
        JOIN UserChats uc ON c.id = uc.chat_id WHERE uc.user_id = $1 AND c.name = $2
        
2025-04-21 14:48:44 - database.connect - INFO - Fetching query: 
        SELECT m.text_content, m.image_content, m.is_bot_message FROM Messages m
        LEFT JOIN Users u ON m.author_id = u.id WHERE m.chat_id = $1 ORDER BY m.created_at ASC
        
2025-04-21 14:48:44 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 14:48:46 - httpx - INFO - HTTP Request: POST http://ollama:11434/api/chat "HTTP/1.1 200 OK"
2025-04-21 14:48:46 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 14:52:11 - database.connect - INFO - Closing connection
2025-04-21 14:53:12 - root - INFO - API Server is starting up with configured logging (file only)
2025-04-21 14:53:12 - database.connect - INFO - Creating connection to users_info on postgres:5432
2025-04-21 14:53:12 - database.connect - INFO - Executing base migration
2025-04-21 14:53:12 - database.connect - INFO - Executing query: CREATE TABLE IF NOT EXISTS Chats (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NULL,
    temperature FLOAT NOT NULL,
    top_p FLOAT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS Users (
    id SERIAL PRIMARY KEY,
    login VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(100) UNIQUE,
    name VARCHAR(100) NULL,
    surname VARCHAR(100) NULL,
    patronymic VARCHAR(100) NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS UserChats (
    user_id INTEGER NOT NULL,
    chat_id INTEGER NOT NULL,
    is_admin BOOLEAN DEFAULT FALSE,
    joined_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (user_id, chat_id),
    FOREIGN KEY (user_id) REFERENCES Users(id) ON DELETE CASCADE,
    FOREIGN KEY (chat_id) REFERENCES Chats(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Messages (
    id SERIAL PRIMARY KEY,
    text_content TEXT NULL,
    image_content TEXT NULL,
    author_id INTEGER NULL,
    chat_id INTEGER NOT NULL,
    is_bot_message BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (author_id) REFERENCES Users(id) ON DELETE SET NULL,
    FOREIGN KEY (chat_id) REFERENCES Chats(id) ON DELETE CASCADE,
    CONSTRAINT content_not_empty CHECK (text_content IS NOT NULL OR image_content IS NOT NULL)
);

2025-04-21 14:53:12 - database.connect - INFO - Base migration executed
2025-04-21 14:53:12 - dependences.lifespan - INFO - Session created
2025-04-21 15:05:40 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 15:05:40 - passlib.handlers.bcrypt - WARNING - (trapped) error reading bcrypt version
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/passlib/handlers/bcrypt.py", line 620, in _load_backend_mixin
    version = _bcrypt.__about__.__version__
              ^^^^^^^^^^^^^^^^^
AttributeError: module 'bcrypt' has no attribute '__about__'
2025-04-21 15:05:40 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 15:05:40 - database.connect - INFO - Fetching row query: 
        SELECT c.id, c.name, c.temperature, c.top_p FROM Chats c
        JOIN UserChats uc ON c.id = uc.chat_id WHERE uc.user_id = $1 AND c.name = $2
        
2025-04-21 15:05:40 - database.connect - INFO - Fetching query: 
        SELECT m.text_content, m.image_content, m.is_bot_message FROM Messages m
        LEFT JOIN Users u ON m.author_id = u.id WHERE m.chat_id = $1 ORDER BY m.created_at ASC
        
2025-04-21 15:05:40 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 15:05:48 - httpx - INFO - HTTP Request: POST http://ollama:11434/api/chat "HTTP/1.1 500 Internal Server Error"
2025-04-21 15:05:48 - services.bot_integration - ERROR - Ollama API error: llama runner process has terminated: signal: killed (status code: 500)
2025-04-21 15:05:48 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 15:06:29 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 15:06:29 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 15:06:29 - database.connect - INFO - Fetching row query: 
        SELECT c.id, c.name, c.temperature, c.top_p FROM Chats c
        JOIN UserChats uc ON c.id = uc.chat_id WHERE uc.user_id = $1 AND c.name = $2
        
2025-04-21 15:06:29 - database.connect - INFO - Fetching query: 
        SELECT m.text_content, m.image_content, m.is_bot_message FROM Messages m
        LEFT JOIN Users u ON m.author_id = u.id WHERE m.chat_id = $1 ORDER BY m.created_at ASC
        
2025-04-21 15:06:29 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 15:06:37 - httpx - INFO - HTTP Request: POST http://ollama:11434/api/chat "HTTP/1.1 500 Internal Server Error"
2025-04-21 15:06:37 - services.bot_integration - ERROR - Ollama API error: llama runner process has terminated: signal: killed (status code: 500)
2025-04-21 15:06:37 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 15:07:07 - database.connect - INFO - Closing connection
2025-04-21 15:08:15 - root - INFO - API Server is starting up with configured logging (file only)
2025-04-21 15:08:15 - database.connect - INFO - Creating connection to users_info on postgres:5432
2025-04-21 15:08:15 - database.connect - INFO - Executing base migration
2025-04-21 15:08:15 - database.connect - INFO - Executing query: CREATE TABLE IF NOT EXISTS Chats (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NULL,
    temperature FLOAT NOT NULL,
    top_p FLOAT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS Users (
    id SERIAL PRIMARY KEY,
    login VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(100) UNIQUE,
    name VARCHAR(100) NULL,
    surname VARCHAR(100) NULL,
    patronymic VARCHAR(100) NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS UserChats (
    user_id INTEGER NOT NULL,
    chat_id INTEGER NOT NULL,
    is_admin BOOLEAN DEFAULT FALSE,
    joined_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (user_id, chat_id),
    FOREIGN KEY (user_id) REFERENCES Users(id) ON DELETE CASCADE,
    FOREIGN KEY (chat_id) REFERENCES Chats(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Messages (
    id SERIAL PRIMARY KEY,
    text_content TEXT NULL,
    image_content TEXT NULL,
    author_id INTEGER NULL,
    chat_id INTEGER NOT NULL,
    is_bot_message BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (author_id) REFERENCES Users(id) ON DELETE SET NULL,
    FOREIGN KEY (chat_id) REFERENCES Chats(id) ON DELETE CASCADE,
    CONSTRAINT content_not_empty CHECK (text_content IS NOT NULL OR image_content IS NOT NULL)
);

2025-04-21 15:08:15 - database.connect - INFO - Base migration executed
2025-04-21 15:08:15 - dependences.lifespan - INFO - Session created
2025-04-21 15:17:11 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 15:17:11 - database.connect - INFO - Fetching row query: 
        SELECT c.id, c.name, c.temperature, c.top_p FROM Chats c
        JOIN UserChats uc ON c.id = uc.chat_id WHERE uc.user_id = $1 AND c.name = $2
        
2025-04-21 15:17:11 - database.connect - INFO - Fetching query: 
        SELECT m.text_content, m.image_content, m.is_bot_message FROM Messages m
        LEFT JOIN Users u ON m.author_id = u.id WHERE m.chat_id = $1 ORDER BY m.created_at ASC
        
2025-04-21 15:17:11 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 15:17:19 - httpx - INFO - HTTP Request: POST http://ollama:11434/api/chat "HTTP/1.1 500 Internal Server Error"
2025-04-21 15:17:19 - services.bot_integration - ERROR - Ollama API error: llama runner process has terminated: signal: killed (status code: 500)
2025-04-21 15:17:19 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 15:18:03 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 15:18:03 - passlib.handlers.bcrypt - WARNING - (trapped) error reading bcrypt version
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/passlib/handlers/bcrypt.py", line 620, in _load_backend_mixin
    version = _bcrypt.__about__.__version__
              ^^^^^^^^^^^^^^^^^
AttributeError: module 'bcrypt' has no attribute '__about__'
2025-04-21 15:18:04 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 15:18:04 - database.connect - INFO - Fetching row query: 
        SELECT c.id, c.name, c.temperature, c.top_p FROM Chats c
        JOIN UserChats uc ON c.id = uc.chat_id WHERE uc.user_id = $1 AND c.name = $2
        
2025-04-21 15:18:04 - database.connect - INFO - Fetching query: 
        SELECT m.text_content, m.image_content, m.is_bot_message FROM Messages m
        LEFT JOIN Users u ON m.author_id = u.id WHERE m.chat_id = $1 ORDER BY m.created_at ASC
        
2025-04-21 15:18:04 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 15:18:11 - httpx - INFO - HTTP Request: POST http://ollama:11434/api/chat "HTTP/1.1 500 Internal Server Error"
2025-04-21 15:18:11 - services.bot_integration - ERROR - Ollama API error: llama runner process has terminated: signal: killed (status code: 500)
2025-04-21 15:18:11 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 15:19:32 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 15:19:32 - database.connect - INFO - Fetching row query: 
        SELECT c.id, c.name, c.temperature, c.top_p FROM Chats c
        JOIN UserChats uc ON c.id = uc.chat_id WHERE uc.user_id = $1 AND c.name = $2
        
2025-04-21 15:19:32 - database.connect - INFO - Fetching query: 
        SELECT m.text_content, m.image_content, m.is_bot_message FROM Messages m
        LEFT JOIN Users u ON m.author_id = u.id WHERE m.chat_id = $1 ORDER BY m.created_at ASC
        
2025-04-21 15:19:32 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 15:19:39 - httpx - INFO - HTTP Request: POST http://ollama:11434/api/chat "HTTP/1.1 500 Internal Server Error"
2025-04-21 15:19:39 - services.bot_integration - ERROR - Ollama API error: llama runner process has terminated: signal: killed (status code: 500)
2025-04-21 15:19:39 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 15:19:49 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 15:19:49 - database.connect - INFO - Fetching row query: 
        SELECT c.id, c.name, c.temperature, c.top_p FROM Chats c
        JOIN UserChats uc ON c.id = uc.chat_id WHERE uc.user_id = $1 AND c.name = $2
        
2025-04-21 15:19:49 - database.connect - INFO - Fetching query: 
        SELECT m.text_content, m.image_content, m.is_bot_message FROM Messages m
        LEFT JOIN Users u ON m.author_id = u.id WHERE m.chat_id = $1 ORDER BY m.created_at ASC
        
2025-04-21 15:19:49 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 15:19:56 - httpx - INFO - HTTP Request: POST http://ollama:11434/api/chat "HTTP/1.1 500 Internal Server Error"
2025-04-21 15:19:56 - services.bot_integration - ERROR - Ollama API error: llama runner process has terminated: signal: killed (status code: 500)
2025-04-21 15:19:56 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 15:20:31 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 15:21:01 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 15:21:01 - database.connect - INFO - Fetching row query: 
        SELECT c.id, c.name, c.temperature, c.top_p FROM Chats c
        JOIN UserChats uc ON c.id = uc.chat_id WHERE uc.user_id = $1 AND c.name = $2
        
2025-04-21 15:21:01 - database.connect - INFO - Fetching query: 
        SELECT m.text_content, m.image_content, m.is_bot_message FROM Messages m
        LEFT JOIN Users u ON m.author_id = u.id WHERE m.chat_id = $1 ORDER BY m.created_at ASC
        
2025-04-21 15:21:01 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 15:21:08 - httpx - INFO - HTTP Request: POST http://ollama:11434/api/chat "HTTP/1.1 500 Internal Server Error"
2025-04-21 15:21:08 - services.bot_integration - ERROR - Ollama API error: llama runner process has terminated: signal: killed (status code: 500)
2025-04-21 15:21:08 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 15:24:20 - database.connect - INFO - Closing connection
2025-04-21 15:33:12 - root - INFO - API Server is starting up with configured logging (file only)
2025-04-21 15:33:12 - database.connect - INFO - Creating connection to users_info on postgres:5432
2025-04-21 15:33:12 - database.connect - INFO - Executing base migration
2025-04-21 15:33:12 - database.connect - INFO - Executing query: CREATE TABLE IF NOT EXISTS Chats (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NULL,
    temperature FLOAT NOT NULL,
    top_p FLOAT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS Users (
    id SERIAL PRIMARY KEY,
    login VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(100) UNIQUE,
    name VARCHAR(100) NULL,
    surname VARCHAR(100) NULL,
    patronymic VARCHAR(100) NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS UserChats (
    user_id INTEGER NOT NULL,
    chat_id INTEGER NOT NULL,
    is_admin BOOLEAN DEFAULT FALSE,
    joined_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (user_id, chat_id),
    FOREIGN KEY (user_id) REFERENCES Users(id) ON DELETE CASCADE,
    FOREIGN KEY (chat_id) REFERENCES Chats(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Messages (
    id SERIAL PRIMARY KEY,
    text_content TEXT NULL,
    image_content TEXT NULL,
    author_id INTEGER NULL,
    chat_id INTEGER NOT NULL,
    is_bot_message BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (author_id) REFERENCES Users(id) ON DELETE SET NULL,
    FOREIGN KEY (chat_id) REFERENCES Chats(id) ON DELETE CASCADE,
    CONSTRAINT content_not_empty CHECK (text_content IS NOT NULL OR image_content IS NOT NULL)
);

2025-04-21 15:33:12 - database.connect - INFO - Base migration executed
2025-04-21 15:33:12 - dependences.lifespan - INFO - Session created
2025-04-21 15:34:31 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 15:34:31 - passlib.handlers.bcrypt - WARNING - (trapped) error reading bcrypt version
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/passlib/handlers/bcrypt.py", line 620, in _load_backend_mixin
    version = _bcrypt.__about__.__version__
              ^^^^^^^^^^^^^^^^^
AttributeError: module 'bcrypt' has no attribute '__about__'
2025-04-21 15:34:31 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 15:34:31 - database.connect - INFO - Fetching row query: 
        SELECT c.id, c.name, c.temperature, c.top_p FROM Chats c
        JOIN UserChats uc ON c.id = uc.chat_id WHERE uc.user_id = $1 AND c.name = $2
        
2025-04-21 15:34:31 - database.connect - INFO - Fetching query: 
        SELECT m.text_content, m.image_content, m.is_bot_message FROM Messages m
        LEFT JOIN Users u ON m.author_id = u.id WHERE m.chat_id = $1 ORDER BY m.created_at ASC
        
2025-04-21 15:34:31 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 15:34:31 - httpx - INFO - HTTP Request: POST http://ollama:11434/api/chat "HTTP/1.1 404 Not Found"
2025-04-21 15:34:31 - services.bot_integration - ERROR - Model deepseek-r1:1.5b not found or not loaded: model "deepseek-r1:1.5b" not found, try pulling it first (status code: 404)
2025-04-21 15:34:31 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 15:34:31 - httpx - INFO - HTTP Request: GET http://ollama:11434/api/tags "HTTP/1.1 200 OK"
2025-04-21 15:35:55 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 15:35:55 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 15:35:55 - database.connect - INFO - Fetching row query: 
        SELECT c.id, c.name, c.temperature, c.top_p FROM Chats c
        JOIN UserChats uc ON c.id = uc.chat_id WHERE uc.user_id = $1 AND c.name = $2
        
2025-04-21 15:35:55 - database.connect - INFO - Fetching query: 
        SELECT m.text_content, m.image_content, m.is_bot_message FROM Messages m
        LEFT JOIN Users u ON m.author_id = u.id WHERE m.chat_id = $1 ORDER BY m.created_at ASC
        
2025-04-21 15:35:55 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 15:35:55 - httpx - INFO - HTTP Request: POST http://ollama:11434/api/chat "HTTP/1.1 404 Not Found"
2025-04-21 15:35:55 - services.bot_integration - ERROR - Model qwen2.5 not found or not loaded: model "qwen2.5" not found, try pulling it first (status code: 404)
2025-04-21 15:35:55 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 15:35:55 - httpx - INFO - HTTP Request: GET http://ollama:11434/api/tags "HTTP/1.1 200 OK"
2025-04-21 15:47:14 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 15:47:15 - database.connect - INFO - Fetching row query: 
        SELECT c.id, c.name, c.temperature, c.top_p FROM Chats c
        JOIN UserChats uc ON c.id = uc.chat_id WHERE uc.user_id = $1 AND c.name = $2
        
2025-04-21 15:47:15 - database.connect - INFO - Fetching query: 
        SELECT m.text_content, m.image_content, m.is_bot_message FROM Messages m
        LEFT JOIN Users u ON m.author_id = u.id WHERE m.chat_id = $1 ORDER BY m.created_at ASC
        
2025-04-21 15:47:15 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 15:47:25 - httpx - INFO - HTTP Request: POST http://ollama:11434/api/chat "HTTP/1.1 200 OK"
2025-04-21 15:47:25 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 15:48:12 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 15:48:12 - database.connect - INFO - Fetching row query: 
        SELECT c.id, c.name, c.temperature, c.top_p FROM Chats c
        JOIN UserChats uc ON c.id = uc.chat_id WHERE uc.user_id = $1 AND c.name = $2
        
2025-04-21 15:48:12 - database.connect - INFO - Fetching query: 
        SELECT m.text_content, m.image_content, m.is_bot_message FROM Messages m
        LEFT JOIN Users u ON m.author_id = u.id WHERE m.chat_id = $1 ORDER BY m.created_at ASC
        
2025-04-21 15:48:12 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 15:48:16 - httpx - INFO - HTTP Request: POST http://ollama:11434/api/chat "HTTP/1.1 200 OK"
2025-04-21 15:48:16 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 15:53:24 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 15:53:24 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 15:53:24 - database.connect - INFO - Fetching row query: 
        SELECT c.id, c.name, c.temperature, c.top_p FROM Chats c
        JOIN UserChats uc ON c.id = uc.chat_id WHERE uc.user_id = $1 AND c.name = $2
        
2025-04-21 15:53:24 - database.connect - INFO - Fetching query: 
        SELECT m.text_content, m.image_content, m.is_bot_message FROM Messages m
        LEFT JOIN Users u ON m.author_id = u.id WHERE m.chat_id = $1 ORDER BY m.created_at ASC
        
2025-04-21 15:53:24 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 15:53:35 - httpx - INFO - HTTP Request: POST http://ollama:11434/api/chat "HTTP/1.1 200 OK"
2025-04-21 15:53:35 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 15:53:52 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 15:53:52 - database.connect - INFO - Fetching row query: 
        SELECT c.id, c.name, c.temperature, c.top_p FROM Chats c
        JOIN UserChats uc ON c.id = uc.chat_id WHERE uc.user_id = $1 AND c.name = $2
        
2025-04-21 15:53:52 - database.connect - INFO - Fetching query: 
        SELECT m.text_content, m.image_content, m.is_bot_message FROM Messages m
        LEFT JOIN Users u ON m.author_id = u.id WHERE m.chat_id = $1 ORDER BY m.created_at ASC
        
2025-04-21 15:53:52 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 15:54:13 - httpx - INFO - HTTP Request: POST http://ollama:11434/api/chat "HTTP/1.1 200 OK"
2025-04-21 15:54:13 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 15:54:32 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 15:54:32 - database.connect - INFO - Fetching row query: 
        SELECT c.id, c.name, c.temperature, c.top_p FROM Chats c
        JOIN UserChats uc ON c.id = uc.chat_id WHERE uc.user_id = $1 AND c.name = $2
        
2025-04-21 15:54:32 - database.connect - INFO - Fetching query: 
        SELECT m.text_content, m.image_content, m.is_bot_message FROM Messages m
        LEFT JOIN Users u ON m.author_id = u.id WHERE m.chat_id = $1 ORDER BY m.created_at ASC
        
2025-04-21 15:54:32 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 15:55:40 - httpx - INFO - HTTP Request: POST http://ollama:11434/api/chat "HTTP/1.1 200 OK"
2025-04-21 15:55:40 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 15:57:16 - database.connect - INFO - Fetching row query: SELECT * FROM Users WHERE login = $1
2025-04-21 15:57:16 - database.connect - INFO - Fetching row query: 
        SELECT c.id, c.name, c.temperature, c.top_p FROM Chats c
        JOIN UserChats uc ON c.id = uc.chat_id WHERE uc.user_id = $1 AND c.name = $2
        
2025-04-21 15:57:16 - database.connect - INFO - Fetching query: 
        SELECT m.text_content, m.image_content, m.is_bot_message FROM Messages m
        LEFT JOIN Users u ON m.author_id = u.id WHERE m.chat_id = $1 ORDER BY m.created_at ASC
        
2025-04-21 15:57:16 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 15:57:24 - httpx - INFO - HTTP Request: POST http://ollama:11434/api/chat "HTTP/1.1 200 OK"
2025-04-21 15:57:24 - database.connect - INFO - Executing query: 
        INSERT INTO Messages(text_content, author_id, chat_id, is_bot_message
        )
        VALUES ($1, $2, $3, $4)
        
2025-04-21 15:58:39 - database.connect - INFO - Closing connection
